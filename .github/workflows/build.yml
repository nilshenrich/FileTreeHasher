# Build the app for Windows, Linux and macOS

name: build
on:
  push:
    tags:
      - 'v*'

jobs:

  # Build for Windows
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up flutter environment
        uses: subosito/flutter-action@v1 # v2 struggles reading version
        with:
          flutter-version: '3.7.x'
          channel: 'stable'

      - name: Resolve dependecies
        run: |
          cd flutter_app
          flutter pub get

      - name: Build for Windows
        run: |
          cd flutter_app
          flutter config --enable-windows-desktop
          flutter build windows --release

      - name: Pack bundle to artifact
        uses: actions/upload-artifact@v3
        with:
          name: bundle-windows-x64
          path: flutter_app\build\windows\runner\Release\
          if-no-files-found: error

  # Build for Linux
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install necessary packages
        run: |
          sudo apt update -y
          sudo apt install -y cmake clang ninja-build libgtk-3-dev

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up flutter environment
        uses: subosito/flutter-action@v1 # v2 struggles reading version
        with:
          flutter-version: '3.7.x'
          channel: 'stable'

      - name: Resolve dependecies
        run: |
          cd flutter_app
          flutter pub get

      - name: Build for Linux
        run: |
          cd flutter_app
          flutter config --enable-linux-desktop
          flutter build linux --release

      - name: Pack bundle to artifact
        uses: actions/upload-artifact@v3
        with:
          name: bundle-linux-x64
          path: flutter_app/build/linux/x64/release/bundle/
          if-no-files-found: error

  # Build for macOS
  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up flutter environment
        uses: subosito/flutter-action@v1 # v2 struggles reading version
        with:
          flutter-version: '3.7.x'
          channel: 'stable'

      - name: Resolve dependecies
        run: |
          cd flutter_app
          flutter pub get

      - name: Build for macOS
        run: |
          cd flutter_app
          flutter config --enable-macos-desktop
          flutter build macos --release

      - name: Pack bundle to artifact
        uses: actions/upload-artifact@v3
        with:
          name: bundle-macos-x64
          path: flutter_app/build/macos/Build/Products/Release/
          if-no-files-found: error

  # Update page and deploy builds
  website:
    runs-on: ubuntu-latest
    needs: [windows, linux, macos]
    steps:
      - name: Get tag name and message
        id: get-tag-info
        run: |
          name=${GITHUB_REF##*/}
          message=$(git show -s --format=%B $name)

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ../bundles

      - name: Install zipping tool
        uses: montudor/action-zip@v1

      - name: Zip all artifacts
        run: |
          zip -qq -r bundle-linux-x64.zip bundle-linux-x64/*
          zip -qq -r bundle-windows-x64.zip bundle-windows-x64/*
          zip -qq -r bundle-macos-x64.zip bundle-macos-x64/*
          rm -r bundle-linux-x64/
          rm -r bundle-windows-x64/
          rm -r bundle-macos-x64/
        working-directory: ../bundles

      - name: Add download page for bundles
        run: bash AddBundleDownload.sh ${{ steps.get-tag-info.outputs.name }} ../../bundles "${{ steps.get-tag-info.outputs.message }}"
        working-directory: ./website

      - name: Push new website to current branch
        run: |
          git config --global user.email "nilshenrich@web.de"
          git config --global user.name "Nils Henrich - deploy workflow"
          git add .
          git commit -m "<GitHub Action> Deploy version ${{ steps.get-tag-info.outputs.name }}"
          git push origin

      - name: Clean repository (only website to be left)
        run: |
          mv website/ ../
          git rm -rf .
          git clean -fxd
          mv ../website/* .

      - name: Build website using jekyll
        uses: helaili/jekyll-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_branch: 'gh-pages'
