[ { "title": "v2.0.1+3", "url": "/FileTreeHasher/downloads/v2.0.1+3/", "categories": "", "tags": "", "date": "2024-07-07 10:13:36 +0000", "snippet": "Hotfix: Correct windows build path used in installer", "content": "Hotfix: Correct windows build path used in installer" }, { "title": "v2.0.0+2", "url": "/FileTreeHasher/downloads/v2.0.0+2/", "categories": "", "tags": "", "date": "2024-04-03 13:32:17 +0000", "snippet": "Hotfix: Apply flutter version update to all platforms", "content": "Hotfix: Apply flutter version update to all platforms" }, { "title": "v2.0.0", "url": "/FileTreeHasher/release-notes/v2.0.0/", "categories": "", "tags": "", "date": "2024-04-03 12:50:00 +0000", "snippet": "This version comes with a fundamental structural update. The user experience stays the same, but under the hood the whole loading and displaying structure has changed.This will be noticeable in bet...", "content": "This version comes with a fundamental structural update. The user experience stays the same, but under the hood the whole loading and displaying structure has changed.This will be noticeable in better performance, especially when dealing with many files.Improvements: Better performance when loading big number of files. The load process doesn’t freeze the GUI anymore but updates it while the process is ongoing. Saving and loading hash files is not deserialized to the file notes themselves to be more memory efficient.Bug fixes Fix installer for linux and macOS." }, { "title": "Hash file can update out of scope", "url": "/FileTreeHasher/known-issues/47/", "categories": "", "tags": "", "date": "2024-04-03 12:36:00 +0000", "snippet": "If a hash file is loaded, some loaded single files can be updated with algorithm and comparison input even if they don’t belong to the loaded hash file but have same absolute path.But it might be w...", "content": "If a hash file is loaded, some loaded single files can be updated with algorithm and comparison input even if they don’t belong to the loaded hash file but have same absolute path.But it might be wanted sometimes to load the same file in several scopes, so the root path must be considered as well when loading a hash file." }, { "title": "v1.0.1+4", "url": "/FileTreeHasher/downloads/v1.0.1+4/", "categories": "", "tags": "", "date": "2023-10-06 14:31:55 +0000", "snippet": "Hotfix: Fix MacOS build action", "content": "Hotfix: Fix MacOS build action" }, { "title": "v1.0.1", "url": "/FileTreeHasher/release-notes/v1.0.1/", "categories": "", "tags": "", "date": "2023-09-23 17:30:00 +0000", "snippet": "Bug fixes: Solved issue opening the app in Windows The application name is displayed correctly in the window header Fixed wrong comparison when having no hash generated", "content": "Bug fixes: Solved issue opening the app in Windows The application name is displayed correctly in the window header Fixed wrong comparison when having no hash generated" }, { "title": "Can't save hash file with same name as folder", "url": "/FileTreeHasher/known-issues/34/", "categories": "", "tags": "", "date": "2023-09-22 09:18:00 +0000", "snippet": "If I try to save a hash file having the same name (without extension) as a folder in the same subfolder I want to save my hash file, the explorer jumps into that folder instead of creating a new ha...", "content": "If I try to save a hash file having the same name (without extension) as a folder in the same subfolder I want to save my hash file, the explorer jumps into that folder instead of creating a new hash file." }, { "title": "v1.0.0+4", "url": "/FileTreeHasher/downloads/v1.0.0+4/", "categories": "", "tags": "", "date": "2023-09-08 14:44:53 +0000", "snippet": "First official release 4. buildFeatures: - Provide proper installer (and deinstaller) for linux and windows - Hash file header now holds more information. Still compatible with v0.0.0Bug fixe...", "content": "First official release 4. buildFeatures: - Provide proper installer (and deinstaller) for linux and windows - Hash file header now holds more information. Still compatible with v0.0.0Bug fixes: - App now has a nice iconOpen issues: - No installer provided for macOS, application does not run properly" }, { "title": "v1.0.0", "url": "/FileTreeHasher/release-notes/v1.0.0/", "categories": "", "tags": "", "date": "2023-09-08 14:31:00 +0000", "snippet": "This is the first official release version.Please feel free to use!", "content": "This is the first official release version.Please feel free to use!" }, { "title": "v0.0.0", "url": "/FileTreeHasher/release-notes/v0.0.0/", "categories": "", "tags": "", "date": "2023-08-05 15:22:00 +0000", "snippet": "This is the first usable release.This is just a testing release, so the app might have some performance issues. But the functionality is fully tested.For this release there is no proper installer, ...", "content": "This is the first usable release.This is just a testing release, so the app might have some performance issues. But the functionality is fully tested.For this release there is no proper installer, so you need to download the bundles from the download page and just run the executable from the top level folder." }, { "title": "v0.0.0+6", "url": "/FileTreeHasher/downloads/v0.0.0+6/", "categories": "", "tags": "", "date": "2023-08-05 15:22:00 +0000", "snippet": "Testing release: Fix view issues on pages", "content": "Testing release: Fix view issues on pages" }, { "title": "Impressions", "url": "/FileTreeHasher/documentation/impressions/", "categories": "", "tags": "", "date": "2023-07-03 14:00:00 +0000", "snippet": "All images here are links to full videos.DemonstrationThis is how it looks generating hashes from some files:Select filesFiles can be selected in two ways: Selecting an entire folder loads all its...", "content": "All images here are links to full videos.DemonstrationThis is how it looks generating hashes from some files:Select filesFiles can be selected in two ways: Selecting an entire folder loads all its nested files. Selecting one or more files individually.Load folderLoad entire folder containing file tree:Load filesLoad some files individually:Change hash algorithmIf a new hash algorithm is selected, the hash is regenerated automatically for corresponding file.A hash algorithm can be changed in multiple ways: For a single file: Hash regeneration for this file is triggered. For an entire folder: Hashes of all contained files are updated and regenerated. Globally: Hash algorithm is updated for all loaded files.Change hash algorithm triggering regeneration:Hash comparisonFor each loaded file a input box is provided to enter a string for comparing with the generated hash. This comparison is triggered automatically on change of input or hash generation. Depending on comparison result the generated hash is colored green or red:Hash fileGenerated hashes can be saved in hash list files.Each loaded folder will create a separate hash file. The single files hashes are saved in a combined hash file.Create hash fileCreating a hash list file from generated hashes and used algorithms:Load hash fileLoading a hash list file overwriting hash algorithms and comparison inputs:" }, { "title": "User Manual", "url": "/FileTreeHasher/documentation/user-manual/", "categories": "", "tags": "", "date": "2023-07-02 14:00:00 +0000", "snippet": "Hash generationUsing File Tree Hasher you are able to generate hash for files of any type and size. The following hash algorithms can be selected: MD5 SHA1 SHA256 SHA384 SHA512 NONEThe hash a...", "content": "Hash generationUsing File Tree Hasher you are able to generate hash for files of any type and size. The following hash algorithms can be selected: MD5 SHA1 SHA256 SHA384 SHA512 NONEThe hash algorithm to use can be selected for each file individually.If a file is added or the hash algorithm is changed, the hash generation starts automatically.It is possible to select a folder from your file system. Doing so, File Tree Hasher loads all files located in the selected folder and its subfolders and generates hashes with selected hash algorithm.Alternatively it is also possible to load one or multiple single files from your file system. Single files are hashed automatically as well on loading or change of hash algorithm.Hash comparisonBeside generating hashes from files, File Tree Hasher also provides a text input for each loaded file to paste a comparison hash into. This comparison hash is automatically compared to the generated hash without case sensitivity.If a comparison hash is placed in the comparison input, the generated hash is colored either green or red depending on the comparison result. This feature lets you directly see which hashes match and which don’t.Hash listWhen it comes to transferring folders, it could be interesting to have a list of many files and their hash codes, so a folder copy can be verified easily.That’s why File Tree Hasher comes up with the hash list feature.Hash list formatHere you can see examples for hash lists generated for an entire folder and for some singly loaded files:*** File Tree Hasher ***Author: Nils HenrichWebsite: https://nilshenrich.github.io/FileTreeHasher/Source code: https://github.com/nilshenrich/FileTreeHasherVersion: &lt;version&gt;/path/to/my/folderda39a3ee5e6b4b0d3255bfef95601890afd80709,SHA1,\"top-file\"d41d8cd98f00b204e9800998ecf8427e,MD5,\"top-folder/sub-file\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855,SHA256,\"top-folder/sub-file-2\"b2f5ff47436671b6e533d8dc3614845d,MD5,\"top-folder-2/sub-folder/sub-sub-file\"*** File Tree Hasher ***Author: Nils HenrichWebsite: https://nilshenrich.github.io/FileTreeHasher/Source code: https://github.com/nilshenrich/FileTreeHasherVersion: &lt;version&gt;Single filesda39a3ee5e6b4b0d3255bfef95601890afd80709,SHA1,\"/path/to/file/one\"d41d8cd98f00b204e9800998ecf8427e,MD5,\"/file/paths/are/absolute\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855,SHA256,\"/no/need/to/be/in/same/directory\"b2f5ff47436671b6e533d8dc3614845d,MD5,\"/another/file\"A hash list file has the extension “.hash” and can be opened using a regular text editor or a CSV editor. Using a CSV editor, the following settings should be used for optimal readability: field delimiter: , text delimiter: “The hash file is made from two parts: A header with general information about the File Tree Hasher itself and the actual hash information. The hash information always has three columns: generated hash, used hash algorithm, path to hashed file.When creating a hash list for a loaded folder, the absolute file path to this folder is given and for each hashed file the relative file path from top-level folder is defined.When creating a hash list from single files, all files are defined via their absolute file paths.Create a hash listCreating a hash list is very easy. As soon as all hashes are generated, the button for saving hash lists can be clicked. This opens a dialog to select the hash lists storage paths for each loaded folder and for all loaded single files together. By clicking the apply button, all hash lists are created and saved.Load a hash listFor verifying files or folders containing files, a previously created hash list can be loaded into the current session. When selecting one ore more hash list files, File Tree Hasher automatically finds the matching files if loaded and updates the comparison inputs. If the hash algorithm from the loaded hash list differs from currently used hash algorithm, this hash is regenerated and checked automatically." }, { "title": "Introduction", "url": "/FileTreeHasher/documentation/introduction/", "categories": "", "tags": "", "date": "2023-07-01 14:00:00 +0000", "snippet": "MotivationIf you are as computer fascinated as I am, you might have the same issue I had:I created myself a bootable USB stick containing many different operating systems ready for live boot or ins...", "content": "MotivationIf you are as computer fascinated as I am, you might have the same issue I had:I created myself a bootable USB stick containing many different operating systems ready for live boot or installation. To do so I had to download all the desired ISO-files from the official download pages. To make sure the files were downloaded properly over my weak home internet connection, creating and checking hashes is highly recommended. So I searched the internet for a free tool to generate hashes from files and found so many nice looking tools. So I took one of them and started to hash my downloaded files and checked the hash code.But all tools I found had a common annoying issue to me:I always have to select all files to hash manually and compare the hash code by hand. This can be very annoying when having many files of big size to hash. The facts that OS manufacturers don’t provide hashes from the same algorithm and that hashing files of big size takes a long time made me creating my own file hashing and comparing tool.The goal of this tool is the following:I wanted a tool I can give many big files to be hashed (probably using different hash algorithms), enter the comparison hashes somewhere and let the tool do the whole rest for me, so I can leave my desk for some time and when I’m back I want to see what files are proper or corrupted.You might find this graphical application a bit ugly, simple or unintuitive. That’s because as a hacker I put my focus on functionality and reliability more than on styling. If you have any hints for styling improvements to make my app more beautiful, please feel free to let me know.Quick overviewThis tool called File Tree Hasher can load a complete folder with all its containing subfolders and files to generate hashes for all those loaded files. Beside that it can also load single files for hashing.The used hash algorithm can be chosen for each file individually. To have deeper information about hashing and hash algorithms please refer to Hash generation.File hashing is one feature part of File Tree Hasher, the other part is hash comparison including saving and loading hash lists. Each file has a text input where a comparison hash can be entered. Also a hash list can be created for a folder of hashed files. Loading this hash list into comparison view is also possible. This is good for checking file transfer over a network or something like that." } ]
