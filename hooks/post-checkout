#!/bin/bash

branch_switched=$3

if [[ $branch_switched != '1' ]]
then
    exit 0
fi

echo "----- POST CHECKOUT -----"

# Get name of checked out branch
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Get root directory
root_dir=$(readlink -nf .)

##################################################
# Checked out a release branch
##################################################
if [[ $current_branch == release/* ]]
then
    # ---------- Update version ----------
    version=$(echo $current_branch | sed "s/release\///g")
    find $root_dir/flutter_app/lib/ -type f -exec sed -i -E "s/^\/\/\s*(#|)\s*@version\s*[1234567890\.\+]+$/\/\/ # @version $version/g" {} \;
    sed -i -E "s/^version:\s*[1234567890\.\+]+$/version: $version/g" $root_dir/flutter_app/pubspec.yaml
    sed -i -E "s/^#define\s+MyAppVersion\s*\"[1234567890\.\+]+\"/#define MyAppVersion \"$version\"/g" $root_dir/flutter_app/install/windows/setupscript.iss
    sed -i -E "s/^Version:\s*[1234567890\.\+]+/Version: $version/g" $root_dir/flutter_app/lib/definies/info.dart
    git add $root_dir/flutter_app
    git commit -m "<hook> Update to version $version"
else
    echo "Nothing to be done for branch '$current_branch'"
fi

echo "--- POST CHECKOUT END ---"
